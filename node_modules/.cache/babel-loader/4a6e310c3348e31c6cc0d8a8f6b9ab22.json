{"ast":null,"code":"import _slicedToArray from\"/Users/dana/Documents/projects/passing-thoughts/passing-thoughts-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{generateId,getNewExpirationTime}from'./utilities';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function AddThoughtForm(props){//set the initial state of the text input as an empty string\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];//will be called when the input changes\nvar handleTextChange=function handleTextChange(event){setText(event.target.value);};//create a new thought object when the form is submitted\nvar handleSubmit=function handleSubmit(event){// prevents the browser from performing its default behavior when a form is submitted\nevent.preventDefault();var thought={id:generateId(),text:text,expiresAt:getNewExpirationTime()};//only add text if user typed something\nif(text.length>0){props.addThought(thought);//clear the form after submitting text\nsetText('');};};return/*#__PURE__*/_jsxs(\"form\",{className:\"AddThoughtForm\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{value:text,onChange:handleTextChange,type:\"text\",\"aria-label\":\"What's on your mind?\",placeholder:\"What's on your mind?\"}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Add\"})]});}","map":{"version":3,"sources":["/Users/dana/Documents/projects/passing-thoughts/passing-thoughts-app/src/AddThoughtForm.js"],"names":["React","useState","generateId","getNewExpirationTime","AddThoughtForm","props","text","setText","handleTextChange","event","target","value","handleSubmit","preventDefault","thought","id","expiresAt","length","addThought"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,CAAqBC,oBAArB,KAAiD,aAAjD,C,wFAEA,MAAO,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CACpC;AACF,cAAwBJ,QAAQ,CAAC,EAAD,CAAhC,wCAAOK,IAAP,eAAaC,OAAb,eAGA;AACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,CAClCF,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP,CACD,CAFD,CAIA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,KAAD,CAAW,CAChC;AACAA,KAAK,CAACI,cAAN,GACA,GAAMC,CAAAA,OAAO,CAAG,CACdC,EAAE,CAAEb,UAAU,EADA,CAEdI,IAAI,CAAEA,IAFQ,CAGdU,SAAS,CAAEb,oBAAoB,EAHjB,CAAhB,CAMA;AACA,GAAGG,IAAI,CAACW,MAAL,CAAc,CAAjB,CAAoB,CAClBZ,KAAK,CAACa,UAAN,CAAiBJ,OAAjB,EACA;AACAP,OAAO,CAAC,EAAD,CAAP,CACD,EACA,CAfD,CAiBC,mBACG,cAAM,SAAS,CAAC,gBAAhB,CAAiC,QAAQ,CAAEK,YAA3C,wBACE,cACA,KAAK,CAAEN,IADP,CAEA,QAAQ,CAAEE,gBAFV,CAGA,IAAI,CAAC,MAHL,CAIA,aAAW,sBAJX,CAKA,WAAW,CAAC,sBALZ,EADF,cAQE,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,KAA3B,EARF,GADH,CAYA","sourcesContent":["import React, { useState } from 'react';\nimport { generateId, getNewExpirationTime } from './utilities';\n\nexport function AddThoughtForm(props) {\n  //set the initial state of the text input as an empty string\nconst [text, setText] = useState(''); \n\n\n//will be called when the input changes\nconst handleTextChange = (event) => {\n  setText(event.target.value);\n};\n\n//create a new thought object when the form is submitted\nconst handleSubmit = (event) => {\n// prevents the browser from performing its default behavior when a form is submitted\nevent.preventDefault(); \nconst thought = {\n  id: generateId(),\n  text: text,\n  expiresAt: getNewExpirationTime(),\n};\n\n//only add text if user typed something\nif(text.length > 0) {\n  props.addThought(thought);\n  //clear the form after submitting text\n  setText('');\n};\n}\n\n return (\n    <form className=\"AddThoughtForm\" onSubmit={handleSubmit}>\n      <input\n      value={text}\n      onChange={handleTextChange}\n      type=\"text\"\n      aria-label=\"What's on your mind?\"\n      placeholder=\"What's on your mind?\"\n      />\n      <input type=\"submit\" value=\"Add\" />\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}