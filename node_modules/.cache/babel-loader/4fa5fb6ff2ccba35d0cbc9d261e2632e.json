{"ast":null,"code":"var _jsxFileName = \"/Users/dana/Documents/projects/passing-thoughts/passing-thoughts-app/src/AddThoughtForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { generateId, getNewExpirationTime } from './utilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddThoughtForm(props) {\n  _s();\n\n  //set the initial state of the text input as an empty string\n  const [text, setText] = useState(''); //will be called when the input changes\n\n  const handleTextChange = event => {\n    setText(event.target.value);\n  }; //create a new thought object when the form is submitted\n\n\n  const handleSubmit = event => {\n    // prevents the browser from performing its default behavior when a form is submitted\n    event.preventDefault();\n    const thought = {\n      id: generateId(),\n      text: text,\n      expiresAt: getNewExpirationTime()\n    }; //only add text if user typed something\n\n    if (text.length > 0) {\n      props.addThought(thought); //clear the form after submitting text\n\n      setText('');\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"AddThoughtForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: handleTextChange,\n      type: \"text\",\n      \"aria-label\": \"What's on your mind?\",\n      placeholder: \"What's on your mind?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddThoughtForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = AddThoughtForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddThoughtForm\");","map":{"version":3,"sources":["/Users/dana/Documents/projects/passing-thoughts/passing-thoughts-app/src/AddThoughtForm.js"],"names":["React","useState","generateId","getNewExpirationTime","AddThoughtForm","props","text","setText","handleTextChange","event","target","value","handleSubmit","preventDefault","thought","id","expiresAt","length","addThought"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,oBAArB,QAAiD,aAAjD;;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AACpC;AACF,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAFsC,CAKtC;;AACA,QAAMO,gBAAgB,GAAIC,KAAD,IAAW;AAClCF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD,CANsC,CAUtC;;;AACA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAChC;AACAA,IAAAA,KAAK,CAACI,cAAN;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEb,UAAU,EADA;AAEdI,MAAAA,IAAI,EAAEA,IAFQ;AAGdU,MAAAA,SAAS,EAAEb,oBAAoB;AAHjB,KAAhB,CAHgC,CAShC;;AACA,QAAGG,IAAI,CAACW,MAAL,GAAc,CAAjB,EAAoB;AAClBZ,MAAAA,KAAK,CAACa,UAAN,CAAiBJ,OAAjB,EADkB,CAElB;;AACAP,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AAAA;AACA,GAfD;;AAiBC,sBACG;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,QAAQ,EAAEK,YAA3C;AAAA,4BACE;AACA,MAAA,KAAK,EAAEN,IADP;AAEA,MAAA,QAAQ,EAAEE,gBAFV;AAGA,MAAA,IAAI,EAAC,MAHL;AAIA,oBAAW,sBAJX;AAKA,MAAA,WAAW,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAYA;;GAxCeJ,c;;KAAAA,c","sourcesContent":["import React, { useState } from 'react';\nimport { generateId, getNewExpirationTime } from './utilities';\n\nexport function AddThoughtForm(props) {\n  //set the initial state of the text input as an empty string\nconst [text, setText] = useState(''); \n\n\n//will be called when the input changes\nconst handleTextChange = (event) => {\n  setText(event.target.value);\n};\n\n//create a new thought object when the form is submitted\nconst handleSubmit = (event) => {\n// prevents the browser from performing its default behavior when a form is submitted\nevent.preventDefault(); \nconst thought = {\n  id: generateId(),\n  text: text,\n  expiresAt: getNewExpirationTime(),\n};\n\n//only add text if user typed something\nif(text.length > 0) {\n  props.addThought(thought);\n  //clear the form after submitting text\n  setText('');\n};\n}\n\n return (\n    <form className=\"AddThoughtForm\" onSubmit={handleSubmit}>\n      <input\n      value={text}\n      onChange={handleTextChange}\n      type=\"text\"\n      aria-label=\"What's on your mind?\"\n      placeholder=\"What's on your mind?\"\n      />\n      <input type=\"submit\" value=\"Add\" />\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}