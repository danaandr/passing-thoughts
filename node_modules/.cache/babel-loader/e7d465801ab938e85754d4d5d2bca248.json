{"ast":null,"code":"var _jsxFileName = \"/Users/dana/Documents/projects/passing-thoughts/passing-thoughts-app/src/Thought.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Thought(props) {\n  _s();\n\n  const {\n    thought,\n    removeThought\n  } = props;\n  useEffect(() => {\n    //when a <Thought> component is rendered, start a countdown.\n    const timeRemaining = thought.expiresAt - Date.now();\n    const timeout = setTimeout(() => {\n      removeThought(thought.id);\n    }, timeRemaining);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [thought]);\n\n  const handleRemoveClick = () => {\n    removeThought(thought.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"Thought\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      \"aria-label\": \"Remove thought\",\n      className: \"remove-button\",\n      onClick: handleRemoveClick,\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text\",\n      children: thought.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Thought, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Thought;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thought\");","map":{"version":3,"sources":["/Users/dana/Documents/projects/passing-thoughts/passing-thoughts-app/src/Thought.js"],"names":["React","useEffect","Thought","props","thought","removeThought","timeRemaining","expiresAt","Date","now","timeout","setTimeout","id","clearTimeout","handleRemoveClick","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA6BF,KAAnC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd;AACF,UAAMK,aAAa,GAAGF,OAAO,CAACG,SAAR,GAAoBC,IAAI,CAACC,GAAL,EAA1C;AACA,UAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/BN,MAAAA,aAAa,CAACD,OAAO,CAACQ,EAAT,CAAb;AACD,KAFyB,EAEvBN,aAFuB,CAA1B;AAGA,WAAO,MAAM;AACXO,MAAAA,YAAY,CAACH,OAAD,CAAZ;AACD,KAFD;AAGD,GATU,EASR,CAACN,OAAD,CATQ,CAAT;;AAWA,QAAMU,iBAAiB,GAAG,MAAM;AAC9BT,IAAAA,aAAa,CAACD,OAAO,CAACQ,EAAT,CAAb;AACD,GAFD;;AAIA,sBACE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA,4BACE;AACE,oBAAW,gBADb;AAEE,MAAA,SAAS,EAAC,eAFZ;AAGE,MAAA,OAAO,EAAEE,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAAuBV,OAAO,CAACW;AAA/B;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA9Beb,O;;KAAAA,O","sourcesContent":["import React, { useEffect } from 'react';\n\nexport function Thought(props) {\n  const { thought, removeThought } = props;\n\n  useEffect(() => {\n    //when a <Thought> component is rendered, start a countdown.\n  const timeRemaining = thought.expiresAt - Date.now();\n  const timeout = setTimeout(() => {\n    removeThought(thought.id);\n  }, timeRemaining);\n  return () => {\n    clearTimeout(timeout);\n  };\n}, [thought]);\n\n  const handleRemoveClick = () => {\n    removeThought(thought.id);\n  };\n  \n  return (\n    <li className=\"Thought\">\n      <button\n        aria-label=\"Remove thought\"\n        className=\"remove-button\"\n        onClick={handleRemoveClick}\n      >\n        &times;\n      </button>\n      <div className=\"text\">{thought.text}</div>\n    </li>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}