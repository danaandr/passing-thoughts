{"ast":null,"code":"var _jsxFileName = \"/Users/dana/Documents/projects/passing-thoughts/passing-thoughts-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { AddThoughtForm } from './AddThoughtForm';\nimport { Thought } from './Thought';\nimport { generateId, getNewExpirationTime } from './utilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [thoughts, setThoughts] = useState([{\n    id: generateId(),\n    text: 'This is a place for your passing thoughts.',\n    expiresAt: getNewExpirationTime()\n  }, {\n    id: generateId(),\n    text: \"They'll be removed after 15 seconds.\",\n    expiresAt: getNewExpirationTime()\n  }]); //returns a new state: the array with a new thought at the front\n\n  const addThought = thought => {\n    setThoughts(thoughts => [thought, ...thoughts]);\n  }; //filter out the thought we want to remove\n\n\n  const removeThought = thoughtIdToRemove => {\n    setThoughts(thoughts => thoughts.filter(thought => thought.id !== thoughtIdToRemove));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        href: \"/Users/dana/Documents/projects/passing-thoughts/passing-thoughts-app/src/icon.jpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(AddThoughtForm, {\n        addThought: addThought\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"thoughts\",\n        children: thoughts.map(thought => /*#__PURE__*/_jsxDEV(Thought, {\n          thought: thought,\n          removeThought: removeThought\n        }, thought.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/8ZQvCc8o/XgE5WRksv2Nwqc5qo=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 17\n}, this), document.getElementById('app'));\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dana/Documents/projects/passing-thoughts/passing-thoughts-app/src/App.js"],"names":["React","useState","ReactDOM","AddThoughtForm","Thought","generateId","getNewExpirationTime","App","thoughts","setThoughts","id","text","expiresAt","addThought","thought","removeThought","thoughtIdToRemove","filter","map","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,UAAT,EAAqBC,oBAArB,QAAiD,aAAjD;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CACvC;AACES,IAAAA,EAAE,EAAEL,UAAU,EADhB;AAEEM,IAAAA,IAAI,EAAE,4CAFR;AAGEC,IAAAA,SAAS,EAAEN,oBAAoB;AAHjC,GADuC,EAMvC;AACEI,IAAAA,EAAE,EAAEL,UAAU,EADhB;AAEEM,IAAAA,IAAI,EAAE,sCAFR;AAGEC,IAAAA,SAAS,EAAEN,oBAAoB;AAHjC,GANuC,CAAD,CAAxC,CADa,CAcf;;AACE,QAAMO,UAAU,GAAIC,OAAD,IAAa;AAC9BL,IAAAA,WAAW,CAAED,QAAD,IAAc,CAACM,OAAD,EAAS,GAAGN,QAAZ,CAAf,CAAX;AACK,GAFP,CAfa,CAkBf;;;AACA,QAAMO,aAAa,GAAIC,iBAAD,IAAuB;AAC7CP,IAAAA,WAAW,CAAED,QAAD,IACZA,QAAQ,CAACS,MAAT,CAAiBH,OAAD,IAAaA,OAAO,CAACJ,EAAR,KAAeM,iBAA5C,CADW,CAAX;AAGC,GAJD;;AAME,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,6BACE;AAAK,QAAA,IAAI,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,UAAU,EAAEH;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,kBACGL,QAAQ,CAACU,GAAT,CAAcJ,OAAD,iBACZ,QAAC,OAAD;AAA0B,UAAA,OAAO,EAAEA,OAAnC;AAA4C,UAAA,aAAa,EAAEC;AAA3D,WAAcD,OAAO,CAACJ,EAAtB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAxCQH,G;;KAAAA,G;AA0CTL,QAAQ,CAACiB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAzB;AACA,eAAed,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { AddThoughtForm } from './AddThoughtForm';\nimport { Thought } from './Thought';\nimport { generateId, getNewExpirationTime } from './utilities';\n\nfunction App() {\n  const [thoughts, setThoughts] = useState([\n    {\n      id: generateId(),\n      text: 'This is a place for your passing thoughts.',\n      expiresAt: getNewExpirationTime(),\n    },\n    {\n      id: generateId(),\n      text: \"They'll be removed after 15 seconds.\",\n      expiresAt: getNewExpirationTime(),\n    },\n  ]);\n\n//returns a new state: the array with a new thought at the front\n  const addThought = (thought) => {\n    setThoughts((thoughts) => [thought,...thoughts]);\n        }\n//filter out the thought we want to remove\nconst removeThought = (thoughtIdToRemove) => {\nsetThoughts((thoughts) => \nthoughts.filter((thought) => thought.id !== thoughtIdToRemove)\n);\n};\n\n  return (\n    <div className=\"App\">\n      <header>\n        <img href='/Users/dana/Documents/projects/passing-thoughts/passing-thoughts-app/src/icon.jpeg' />\n      </header>\n      <main>\n        <AddThoughtForm addThought={addThought}/>\n        <ul className=\"thoughts\">\n          {thoughts.map((thought) => (\n            <Thought key={thought.id} thought={thought} removeThought={removeThought}/>\n          ))}\n        </ul>\n      </main>\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('app'));\nexport default App;"]},"metadata":{},"sourceType":"module"}